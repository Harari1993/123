{"version":3,"file":"ac-map-layer-provider.component.js","sourceRoot":"","sources":["ac-map-layer-provider.component.ts"],"names":[],"mappings":"OACO,EAAE,SAAS,EAAU,KAAK,EAAE,MAAM,eAAe;OACjD,EAAE,aAAa,EAAE,MAAM,sCAAsC;OAC7D,EAAE,uBAAuB,EAAE,MAAM,8CAA8C;OAC/E,EAAE,OAAO,EAAE,MAAM,qBAAqB;AAkB7C;IASC,qCAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QANhD,YAAO,GAAmB,EAAE,CAAC;QAE7B,aAAQ,GAA4B,uBAAuB,CAAC,OAAO,CAAC;IAKpE,CAAC;IAED,8CAAQ,GAAR;QACC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,KAAK,uBAAuB,CAAC,OAAO,CAAC,CAAC,CAAC;YAC7F,MAAM,yBAAyB,CAAC;QACjC,CAAC;QAED,IAAI,QAAQ,CAAC;QAEb,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvB,KAAK,uBAAuB,CAAC,aAAa;gBACzC,QAAQ,GAAG,2BAA2B,CAAC,2BAA2B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACjF,KAAK,CAAC;YACP,KAAK,uBAAuB,CAAC,iBAAiB;gBAC7C,QAAQ,GAAG,2BAA2B,CAAC,+BAA+B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACrF,KAAK,CAAC;YACP,KAAK,uBAAuB,CAAC,eAAe;gBAC3C,QAAQ,GAAG,2BAA2B,CAAC,6BAA6B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACnF,KAAK,CAAC;YACP,KAAK,uBAAuB,CAAC,OAAO;gBACnC,KAAK,CAAC;YACP;gBACC,QAAQ,GAAG,2BAA2B,CAAC,wBAAwB,EAAE,CAAC;gBAClE,KAAK,CAAC;QACR,CAAC;QACD,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACtF,CAAC;IAEM,uDAA2B,GAAlC,UAAmC,OAAO;QACzC,MAAM,CAAC,IAAI,MAAM,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAC;IACzD,CAAC;IAEM,2DAA+B,GAAtC,UAAuC,OAAO;QAC7C,MAAM,CAAC,IAAI,MAAM,CAAC,gCAAgC,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IAEM,yDAA6B,GAApC,UAAqC,OAAO;QAC3C,MAAM,CAAC,IAAI,MAAM,CAAC,8BAA8B,CAAC,OAAO,CAAC,CAAC;IAC3D,CAAC;IAEM,oDAAwB,GAA/B;QACC,MAAM,CAAC,MAAM,CAAC,mCAAmC,CAAC;YACjD,GAAG,EAAE,MAAM,CAAC,cAAc,CAAC,gCAAgC,CAAC;SAC5D,CAAC,CAAC;IACJ,CAAC;IACK,sCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACzB,QAAQ,EAAE,uBAAuB;oBACjC,QAAQ,EAAE,EAAE;iBACZ,EAAG,EAAE;KACL,CAAC;IAEK,0CAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,aAAa,GAAG;KACtB,EAF6F,CAE7F,CAAC;IACK,0CAAc,GAA2C;QAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC9B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC1B,CAAC;IACF,kCAAC;AAAD,CAAC,AAtED,IAsEC","sourcesContent":["declare var Cesium;\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { CesiumService } from '../../services/cesium/cesium.service';\r\nimport { MapLayerProviderOptions } from '../../models/map-layer-provider-options.enum';\r\nimport { Checker } from '../../utils/checker';\r\n\r\n/**\r\n *  This component is used for adding a map provider service to the map (ac-map).\r\n *  The component must be a child of <ac-map>.\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *    &lt;ac-map-layer-provider [options]=\"optionsObject\" [provider]=\"myProvider\"&gt;\r\n *    &lt;/ac-map-layer-provider&gt;\r\n *  ```\r\n *\r\n *  @param {Object} options - refer to cesium docs for details https://cesiumjs.org/Cesium/Build/Documentation/ImageryProvider.html\r\n *  @param {MapLayerProviderOptions} provider\r\n *  @param {Number} index (optional) - The index to add the layer at. If omitted, the layer will added on top of all existing layers.\r\n */\r\n\r\n\r\nexport class AcMapLayerProviderComponent implements OnInit {\r\n\r\n\t\r\n\toptions: {url?: string} = {};\r\n\t\r\n\tprovider: MapLayerProviderOptions = MapLayerProviderOptions.OFFLINE;\r\n\t\r\n\tindex: Number;\r\n\r\n\tconstructor(private cesiumService: CesiumService) {\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tif (!Checker.present(this.options.url) && this.provider !== MapLayerProviderOptions.OFFLINE) {\r\n\t\t\tthrow 'options must have a url';\r\n\t\t}\r\n\r\n\t\tlet provider;\r\n\r\n\t\tswitch (this.provider) {\r\n\t\t\tcase MapLayerProviderOptions.WebMapService:\r\n\t\t\t\tprovider = AcMapLayerProviderComponent.createWebMapServiceProvider(this.options);\r\n\t\t\t\tbreak;\r\n\t\t\tcase MapLayerProviderOptions.WebMapTileService:\r\n\t\t\t\tprovider = AcMapLayerProviderComponent.createWebMapTileServiceProvider(this.options);\r\n\t\t\t\tbreak;\r\n\t\t\tcase MapLayerProviderOptions.ArcGisMapServer:\r\n\t\t\t\tprovider = AcMapLayerProviderComponent.createArcGisMapServerProvider(this.options);\r\n\t\t\t\tbreak;\r\n\t\t\tcase MapLayerProviderOptions.OFFLINE:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tprovider = AcMapLayerProviderComponent.createOfflineMapProvider();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.cesiumService.getScene().imageryLayers.addImageryProvider(provider, this.index);\r\n\t}\r\n\r\n\tstatic createWebMapServiceProvider(options) {\r\n\t\treturn new Cesium.WebMapServiceImageryProvider(options);\r\n\t}\r\n\r\n\tstatic createWebMapTileServiceProvider(options) {\r\n\t\treturn new Cesium.WebMapTileServiceImageryProvider(options);\r\n\t}\r\n\r\n\tstatic createArcGisMapServerProvider(options) {\r\n\t\treturn new Cesium.ArcGisMapServerImageryProvider(options);\r\n\t}\r\n\r\n\tstatic createOfflineMapProvider() {\r\n\t\treturn Cesium.createTileMapServiceImageryProvider({\r\n\t\t\turl: Cesium.buildModuleUrl('Assets/Textures/NaturalEarthII')\r\n\t\t});\r\n\t}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n\tselector: 'ac-map-layer-provider',\r\n\ttemplate: '',\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CesiumService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'provider': [{ type: Input },],\n'index': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
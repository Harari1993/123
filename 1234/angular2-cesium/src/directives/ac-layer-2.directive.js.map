{"version":3,"file":"ac-layer-2.directive.js","sourceRoot":"","sources":["ac-layer-2.directive.ts"],"names":[],"mappings":"OACO,EAAE,YAAY,EAAE,MAAM,iDAAiD;OACvE,EAAE,SAAS,EAAE,WAAW,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,KAAK,EAAE,MAAM,eAAe;AAElG;IACC,mBAAmB,MAAqB,EACrB,SAAqB;QAD5B,sBAA4B,GAA5B,aAA4B;QAC5B,yBAA4B,GAA5B,gBAA4B;QADrB,WAAM,GAAN,MAAM,CAAe;QACrB,cAAS,GAAT,SAAS,CAAY;IACxC,CAAC;IACF,gBAAC;AAAD,CAAC,AAJD,IAIC;AAGD;IA0BC,2BAAoB,WAA6B,EAC7B,gBAAkC,EAClC,cAAiC,EACjC,YAA0B;QAH1B,gBAAW,GAAX,WAAW,CAAkB;QAC7B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAmB;QACjC,iBAAY,GAAZ,YAAY,CAAc;IAC9C,CAAC;IAzBD,sBAAI,yCAAU;aAAd,UAAe,UAA2B;YAA1C,iBAmBC;YAlBA,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACtB,MAAM,CAAC;YACR,CAAC;YAED,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,IAAM,OAAO,GAAG,IAAI,SAAS,EAAE,CAAC;YAEhC,UAAU,CAAC,SAAS,CAAC,UAAC,IAAI;gBACzB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACX,IAAI,GAAG,KAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,KAAI,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;gBAC5E,CAAC;gBAED,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;gBACzB,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBAE7B,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YACrC,CAAC,CAAC,CAAC;QACJ,CAAC;;;OAAA;IAOK,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACzB,QAAQ,EAAE,YAAY;iBACtB,EAAG,EAAE;KACL,CAAC;IAEK,gCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,WAAW,GAAG;QACrB,EAAC,IAAI,EAAE,gBAAgB,GAAG;QAC1B,EAAC,IAAI,EAAE,iBAAiB,GAAG;QAC3B,EAAC,IAAI,EAAE,YAAY,GAAG;KACrB,EAL6F,CAK7F,CAAC;IACK,gCAAc,GAA2C;QAChE,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC/B,CAAC;IACF,wBAAC;AAAD,CAAC,AA9CD,IA8CC","sourcesContent":["import { Observable } from 'rxjs';\r\nimport { LayerService } from '../services/layer-service/layer-service.service';\r\nimport { Directive, TemplateRef, ViewContainerRef, ChangeDetectorRef, Input } from '@angular/core';\r\n\r\nexport class LayerData {\r\n\tconstructor(public entity: Object = null,\r\n\t            public $implicit: any = null) {\r\n\t}\r\n}\r\n\r\n\r\nexport class AcLayer2Directive {\r\n\r\n\tprivate _observable: Observable<any>;\r\n\r\n\t\r\n\tset acLayer2Of(observable: Observable<any>) {\r\n\t\tif (this._observable) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet view = null;\r\n\t\tthis._observable = observable;\r\n\t\tconst context = new LayerData();\r\n\r\n\t\tobservable.subscribe((data) => {\r\n\t\t\tif (!view) {\r\n\t\t\t\tview = this.viewContainerRef.createEmbeddedView(this.templateRef, context);\r\n\t\t\t}\r\n\r\n\t\t\tcontext.$implicit = data;\r\n\t\t\tcontext.entity = data.entity;\r\n\t\t\t// this.layerService.setCurrentNotification(data);\r\n\t\t\tthis.changeDetector.detectChanges();\r\n\t\t});\r\n\t}\r\n\r\n\tconstructor(private templateRef: TemplateRef<any>,\r\n\t            private viewContainerRef: ViewContainerRef,\r\n\t            private changeDetector: ChangeDetectorRef,\r\n\t            private layerService: LayerService) {\r\n\t}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n\tselector: '[acLayer2]'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: ChangeDetectorRef, },\n{type: LayerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'acLayer2Of': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
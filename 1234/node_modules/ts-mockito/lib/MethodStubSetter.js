"use strict";
var ReturnValueMethodStub_1 = require("./stub/ReturnValueMethodStub");
var ThrowErrorMethodStub_1 = require("./stub/ThrowErrorMethodStub");
var CallFunctionMethodStub_1 = require("./stub/CallFunctionMethodStub");
var CaptorMethodStub_1 = require("./stub/CaptorMethodStub");
var MethodStubSetter = (function () {
    function MethodStubSetter(methodToStub) {
        this.methodToStub = methodToStub;
    }
    MethodStubSetter.prototype.thenReturn = function (value) {
        this.methodToStub.methodStubCollection.add(new ReturnValueMethodStub_1.ReturnValueMethodStub(this.methodToStub.matchers, value));
    };
    MethodStubSetter.prototype.throwsError = function (error) {
        this.methodToStub.methodStubCollection.add(new ThrowErrorMethodStub_1.ThrowErrorMethodStub(this.methodToStub.matchers, error));
    };
    MethodStubSetter.prototype.thenCall = function (func) {
        this.methodToStub.methodStubCollection.add(new CallFunctionMethodStub_1.CallFunctionMethodStub(this.methodToStub.matchers, func));
    };
    MethodStubSetter.prototype.thenCapture = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.methodToStub.methodStubCollection.add(new CaptorMethodStub_1.CaptorMethodStub(this.methodToStub.matchers, args));
    };
    return MethodStubSetter;
}());
exports.MethodStubSetter = MethodStubSetter;
//# sourceMappingURL=MethodStubSetter.js.map
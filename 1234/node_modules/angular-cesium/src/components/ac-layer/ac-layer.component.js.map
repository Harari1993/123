{"version":3,"file":"ac-layer.component.js","sourceRoot":"","sources":["ac-layer.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\nimport { Component, OnInit, Input, OnChanges, SimpleChanges, AfterContentInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { LayerService } from '../../services/layer-service/layer-service.service';\nimport { AcNotification } from '../../models/ac-notification';\nimport { ActionType } from '../../models/action-type.enum';\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\nimport { SimpleDrawerService } from '../../services/drawers/simple-drawer/simple-drawer.service';\nimport { StaticCircleDrawerService } from '../../services/drawers/static-circle-drawer/static-circle-drawer.service';\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\nimport { DynamicEllipseDrawerService } from '../../services/drawers/ellipse-drawer/dynamic-ellipse-drawer.service';\nimport { DynamicPolylineDrawerService } from '../../services/drawers/dynamic-polyline-drawer/dynamic-polyline-drawer.service';\nimport { StaticPolylineDrawerService } from '../../services/drawers/static-polyline-drawer/static-polyline-drawer.service';\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\n\n/**\n *  This is a ac-layer implementation.\n *  The ac-layer element must be a child of ac-map element.\n *  __param:__ {string} acfor - get the track observable and entityName (see the example)\n *  __param:__ {boolean} show - show/hide layer's entities\n *  __param:__ {any} context - get the context layer that will use the componnet (most of the time equal to \"this\")\n *\n *  __Usage :__\n *  ```\n *  &lt;ac-map&gt;\n *      &lt;ac-layer acFor=\"let track of tracks$\" [show]=\"showTracks\" [context]=\"this\"&gt;\n *          &lt;ac-billboard-desc props=\"{\n *               image: track.image,\n *               position: track.position,\n *               scale: track.scale,\n *               color: track.color,\n *               name: track.name\n *          }\"&gt;\n *      &lt;/ac-billboard-desc>\n *          &lt;ac-label-desc props=\"{\n *               position: track.position,\n *               pixelOffset : [-15,20] | pixelOffset,\n *               text: track.name,\n *               font: '15px sans-serif'\n *          }\"&gt;\n *          &lt;/ac-label-desc&gt;\n *      &lt;/ac-layer&gt;\n *  &lt;/ac-map&gt;\n *  ```\n */\n\nexport class AcLayerComponent implements OnInit, OnChanges, AfterContentInit {\n\tprivate static readonly acForRgx = /^let\\s+.+\\s+of\\s+.+$/;\n\n\t\n\tshow = true;\n\t\n\tacFor: string;\n\t\n\tcontext: any;\n\n\tprivate entityName: string;\n\tprivate observable: Observable<AcNotification>;\n\tprivate _drawerList: SimpleDrawerService[] = [];\n\tprivate _updateStream: Subject<AcNotification> = new Subject<AcNotification>();\n\n\tconstructor(private  layerService: LayerService,\n\t            private _computationCache: ComputationCache,\n\t            billboardDrawerService: BillboardDrawerService,\n\t            labelDrawerService: LabelDrawerService,\n\t            ellipseDrawerService: EllipseDrawerService,\n\t            dynamicEllipseDrawerService: DynamicEllipseDrawerService,\n\t            dynamicPolylineDrawerService: DynamicPolylineDrawerService,\n\t            staticCircleDrawerService: StaticCircleDrawerService,\n\t            staticPolylineDrawerService: StaticPolylineDrawerService,\n\t            polygonDrawerService: PolygonDrawerService,\n\t            arcDrawerService: ArcDrawerService,\n\t            pointDraweeSrvice: PointDrawerService) {\n\t\tthis._drawerList = Array.of(\n\t\t\tbillboardDrawerService,\n\t\t\tlabelDrawerService,\n\t\t\tellipseDrawerService,\n\t\t\tdynamicEllipseDrawerService,\n\t\t\tdynamicPolylineDrawerService,\n\t\t\tstaticCircleDrawerService,\n\t\t\tstaticPolylineDrawerService,\n\t\t\tpolygonDrawerService,\n\t\t\tarcDrawerService,\n\t\t\tpointDraweeSrvice\n\t\t);\n\t}\n\n\tinit() {\n\t\tthis.initValidParams();\n\n\t\tthis.observable.merge(this._updateStream).subscribe((notification) => {\n\t\t\tthis._computationCache.clear();\n\t\t\tthis.context[this.entityName] = notification.entity;\n\t\t\tthis.layerService.getDescriptions().forEach((descriptionComponent) => {\n\t\t\t\tswitch (notification.actionType) {\n\t\t\t\t\tcase ActionType.ADD_UPDATE:\n\t\t\t\t\t\tdescriptionComponent.draw(this.context, notification.id, notification.entity);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ActionType.DELETE:\n\t\t\t\t\t\tdescriptionComponent.remove(notification.id);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error('unknown action type: ' + notification.actionType);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate initValidParams() {\n\t\tif (!this.context) {\n\t\t\tthrow new Error('ac-layer: must initialize [context] ');\n\t\t}\n\n\t\tif (!AcLayerComponent.acForRgx.test(this.acFor)) {\n\t\t\tthrow new Error('ac-layer: must initialize [acFor] with a valid syntax \\' [acFor]=\\\"let item of observer$\\\" \\' '\n\t\t\t\t+ 'instead received: ' + this.acFor);\n\t\t}\n\t\tconst acForArr = this.acFor.split(' ');\n\t\tthis.observable = this.context[acForArr[3]];\n\t\tthis.entityName = acForArr[1];\n\t\tif (!this.observable || !(this.observable instanceof Observable)) {\n\t\t\tthrow  new Error('ac-layer: must initailize [acFor] with rx observable, instead received: ' + this.observable);\n\t\t}\n\t}\n\n\tngAfterContentInit(): void {\n\t\tthis.init();\n\t}\n\n\tngOnInit(): void {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tif (changes['show']) {\n\t\t\tconst showValue = changes['show'].currentValue;\n\t\t\tthis._drawerList.forEach((drawer) => drawer.setShow(showValue));\n\t\t}\n\t}\n\n\t/**\n\t * Remove all the entities from the layer.\n\t */\n\tremoveAll(): void {\n\t\tthis.layerService.getDescriptions().forEach((description) => description.removeAll());\n\t}\n\n\t/**\n\t * remove 1 entity from the layer\n\t * @param {number} entityId\n\t */\n\tremove(entityId: number) {\n\t\tthis._updateStream.next({id: entityId, actionType: ActionType.DELETE});\n\t}\n\n\t/**\n\t * update 1 entity from the layer\n\t * @param {AcNotification} notification\n\t */\n\tupdate(notification: AcNotification): void {\n\t\tthis._updateStream.next(notification);\n\t}\n\n\trefreshAll(collection: AcNotification[]): void {\n\t\t// TODO make entity interface: collection of type entity not notification\n\t\tObservable.from(collection).subscribe((entity) => this._updateStream.next(entity));\n\t}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n\tselector: 'ac-layer',\n\ttemplate: '',\n\tproviders: [\n\t\tLayerService, ComputationCache, BillboardDrawerService, LabelDrawerService, EllipseDrawerService,\n\t\tDynamicEllipseDrawerService, DynamicPolylineDrawerService, StaticCircleDrawerService,\n\t\tStaticPolylineDrawerService, PolygonDrawerService, ArcDrawerService, PointDrawerService\n\t]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LayerService, },\n{type: ComputationCache, },\n{type: BillboardDrawerService, },\n{type: LabelDrawerService, },\n{type: EllipseDrawerService, },\n{type: DynamicEllipseDrawerService, },\n{type: DynamicPolylineDrawerService, },\n{type: StaticCircleDrawerService, },\n{type: StaticPolylineDrawerService, },\n{type: PolygonDrawerService, },\n{type: ArcDrawerService, },\n{type: PointDrawerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'show': [{ type: Input },],\n'acFor': [{ type: Input },],\n'context': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
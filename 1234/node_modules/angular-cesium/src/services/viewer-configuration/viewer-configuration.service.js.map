{"version":3,"file":"viewer-configuration.service.js","sourceRoot":"","sources":["viewer-configuration.service.ts"],"names":[],"mappings":"OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;AAgB1C;IAAA;IAgBA,CAAC;IAbC,sBAAI,8CAAa;aAAjB;YACE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;aAED,UAAkB,KAAU;YAC1B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC;;;OAJA;IAKI,8BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IAEK,kCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,0BAAC;AAAD,CAAC,AAhBD,IAgBC","sourcesContent":["import { Injectable } from '@angular/core';\n\n/**\n * Service for setting cesium viewer map options.\n * According to [Viewer]{@link https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html?classFilter=vie}\n * defaulty angular-cesium doesnt provide this service and viewer is created with default options.\n * In order set specific options you must set this service as provider in your component and\n * set the wanted options.\n * @example\n * constructor(viewerConf :ViewerConfiguration ){\n  *   viewerConfiguration.viewerOptions = { timeline: false };\n  * }\n *\n * +notice this configuration will for all ac-map-components in your component.\n */\n\nexport class ViewerConfiguration {\n  private _viewerOptions: any;\n\n  get viewerOptions(): any {\n    return this._viewerOptions;\n  }\n\n  set viewerOptions(value: any) {\n    this._viewerOptions = value;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
{"version":3,"file":"viewer-factory.service.js","sourceRoot":"","sources":["viewer-factory.service.ts"],"names":[],"mappings":"OACO,EAAE,UAAU,EAAE,MAAM,eAAe;AAG1C;IAGC;QACC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACtB,CAAC;IASD,oCAAY,GAAZ,UAAa,YAAyB,EAAE,OAAa;QACpD,MAAM,CAAC,iBAAiB,CAAC,GAAG,mCAAmC,CAAC;QAEhE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACb,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QACtD,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EACzC;gBAEC,eAAe,EAAE,MAAM,CAAC,mCAAmC,CAAC;oBAC3D,GAAG,EAAE,MAAM,CAAC,cAAc,CAAC,gCAAgC,CAAC;iBAC5D,CAAC;gBACF,eAAe,EAAE,KAAK;gBACtB,QAAQ,EAAE,KAAK;aACf,CAAC,CAAC;QACL,CAAC;IACF,CAAC;IACK,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IAEK,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,oBAAC;AAAD,CAAC,AArCD,IAqCC","sourcesContent":["declare var Cesium;\nimport { Injectable } from '@angular/core';\n\n\nexport class ViewerFactory {\n\tcesium: any;\n\n\tconstructor() {\n\t\tthis.cesium = Cesium;\n\t}\n\n\t/**\n\t * Creates a viewer with default or custom options\n\t * @param mapContainer - container to initialize the viewer on\n\t * @param options - Options to create the viewer with - Optional\n\n\t * @returns {any} new viewer\n\t */\n\tcreateViewer(mapContainer: HTMLElement, options?: any) {\n\t\twindow['CESIUM_BASE_URL'] = '/node_modules/cesium/Build/Cesium';\n\n\t\tif (options) {\n\t\t\treturn new this.cesium.Viewer(mapContainer, options);\n\t\t} else {\n\t\t\treturn new this.cesium.Viewer(mapContainer,\n\t\t\t\t{\n\t\t\t\t\t// Poor internet connection - use default globe image, TODO: should be removed\n\t\t\t\t\timageryProvider: Cesium.createTileMapServiceImageryProvider({\n\t\t\t\t\t\turl: Cesium.buildModuleUrl('Assets/Textures/NaturalEarthII')\n\t\t\t\t\t}),\n\t\t\t\t\tbaseLayerPicker: false,\n\t\t\t\t\tgeocoder: false\n\t\t\t\t});\n\t\t}\n\t}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
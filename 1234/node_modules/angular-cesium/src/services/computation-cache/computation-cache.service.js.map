{"version":3,"file":"computation-cache.service.js","sourceRoot":"","sources":["computation-cache.service.ts"],"names":[],"mappings":"OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;AAG1C;IAAA;QACS,WAAM,GAAG,IAAI,GAAG,EAAe,CAAC;IAqBzC,CAAC;IAnBA,8BAAG,GAAH,UAAI,UAAkB,EAAE,QAAqB;QAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACpC,CAAC;QAED,IAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACnC,MAAM,CAAC,KAAK,CAAC;IACd,CAAC;IAED,gCAAK,GAAL;QACC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IACK,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IAEK,+BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,uBAAC;AAAD,CAAC,AAtBD,IAsBC","sourcesContent":["import { Injectable } from '@angular/core';\n\n\nexport class ComputationCache {\n\tprivate _cache = new Map<string, any>();\n\n\tget(expression: string, insertFn: (() => any)): any {\n\t\tif (this._cache.has(expression)) {\n\t\t\treturn this._cache.get(expression);\n\t\t}\n\n\t\tconst value = insertFn();\n\t\tthis._cache.set(expression, value);\n\t\treturn value;\n\t}\n\n\tclear() {\n\t\tthis._cache.clear();\n\t}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}